name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'ab-development-app1'
        type: choice
        options:
        - ab-development-app1
        - ab-uat-app1
        - ab-prod-app1
      application:
        description: 'Application to deploy'
        required: true
        default: 'app2'
        type: choice
        options:
        - app1
        - app2
env:
  AWS_REGION: us-east-1     
jobs:
  check_app:
    name: Check Folder
    runs-on: ubuntu-latest
    outputs:
      folder: ${{ steps.check_app.outputs.folder }}
    steps:
      - name: Check Folder
        id: check_app
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "ab-development-app1" ]]; then
            echo "folder=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "ab-uat-app1" ]]; then
            echo "folder=uat" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "ab-prod-app1" ]]; then
            echo "folder=prod" >> $GITHUB_OUTPUT
          fi

  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: check_app
    defaults:
      run:
        working-directory: terraform/${{ needs.check_app.outputs.folder }}/${{ needs.check_app.outputs.folder }}_${{ github.event.inputs.application }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.7.5 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ format('{0}_{1}', 'AWS_ACCESS_KEY_ID', needs.check_app.outputs.folder) }}
        aws-secret-access-key: ${{ format('{0}_{1}', 'AWS_SECRET_ACCESS_KEY', needs.check_app.outputs.folder) }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: terraform-plan
      run: terraform plan -out=plan.tfplan

    - name: Uploading the txt file
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: terraform/${{ needs.check_app.outputs.folder }}/${{ needs.check_app.outputs.folder }}_${{ github.event.inputs.application }}/plan.tfplan

  apply_terraform:
    name: Apply Terraform
    needs: [terraform, check_app]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: terraform/${{ needs.check_app.outputs.folder }}/${{ needs.check_app.outputs.folder }}_${{ github.event.inputs.application }}    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}
  
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.7.5

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ format('{0}_{1}', 'AWS_ACCESS_KEY_ID', needs.check_app.outputs.folder) }}
        aws-secret-access-key: ${{ format('{0}_{1}', 'AWS_SECRET_ACCESS_KEY', needs.check_app.outputs.folder) }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init
  
    - name: Download the artifact
      uses: actions/download-artifact@v3
      with:
        name: tfplan

    - name: Apply Terraform
      run: terraform apply -auto-approve ../../../plan.hcl
  